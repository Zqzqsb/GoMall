node:
  id: "envoy-1"    # 唯一的节点标识符，可以自定义
  cluster: "gateway-cluster"    # 集群名称，可以自定义

static_resources:
  listeners:
    - name: listener_0
      address:
        socket_address:
          address: 0.0.0.0
          port_value: 8080  # 外部暴露的 HTTP 服务端口
      filter_chains:
        - filters:
            - name: envoy.filters.network.http_connection_manager
              typed_config:
                "@type": type.googleapis.com/envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager
                stat_prefix: ingress_http
                codec_type: AUTO  # 自动处理 HTTP 编解码
                route_config:
                  name: local_route
                  virtual_hosts:
                    - name: backend_services
                      domains: ["*"]  # 匹配所有域名，您可以根据需要修改
                      routes:
                        - match:
                            prefix: "/login"  # 匹配/login路径的 HTTP 请求
                          route:
                            cluster: user-service  # 将请求代理到名为 user-service 的集群
                            timeout: 0s  # 请求超时设置，您可以根据需要调整
                            retry_policy:
                              retry_on: 5xx  # 如果返回 5xx 错误，进行重试
                              num_retries: 3  # 重试次数
                        - match:
                            prefix: "/register"  # 匹配/register路径的 HTTP 请求
                          route:
                            cluster: user-service  # 将请求代理到名为 user-service 的集群
                            timeout: 0s  # 请求超时设置
                            retry_policy:
                              retry_on: 5xx  # 如果返回 5xx 错误，进行重试
                              num_retries: 3  # 重试次数
                        - match:
                            prefix: "/hello"  # 匹配/register路径的 HTTP 请求
                          route:
                            cluster: user-service  # 将请求代理到名为 user-service 的集群
                            timeout: 0s  # 请求超时设置
                            retry_policy:
                              retry_on: 5xx  # 如果返回 5xx 错误，进行重试
                              num_retries: 3  # 重试次数
                http_filters:
                  - name: envoy.filters.http.router  # 路由器过滤器，负责将请求路由到目标服务
                    typed_config:
                      "@type": type.googleapis.com/envoy.extensions.filters.http.router.v3.Router
                access_log:
                  - name: envoy.access_loggers.stdout
                    typed_config:
                      "@type": type.googleapis.com/envoy.extensions.access_loggers.stream.v3.StdoutAccessLog
                      
  clusters:
    - name: user-service
      connect_timeout: 5s
      type: strict_dns  # 使用严格的 DNS 服务发现
      lb_policy: round_robin  # 使用轮询负载均衡策略
      load_assignment:
        cluster_name: user-service
        endpoints:
          - lb_endpoints:
              - endpoint:
                  address:
                    socket_address:
                      address: 172.17.0.1  # 宿主机在 Docker bridge 网络中的 IP 地址
                      port_value: 8888  # 后端 HTTP 服务的端口，假设为 8888

admin:
  access_log_path: /dev/null  # 禁用访问日志
  address:
    socket_address:
      address: 0.0.0.0
      port_value: 9901  # 管理端口，可以用于查看 Envoy 状态
